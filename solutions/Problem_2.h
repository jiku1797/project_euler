#ifndef PROJECT_EULER_SOLUTIONS_PROBLEM_2_H
#define PROJECT_EULER_SOLUTIONS_PROBLEM_2_H

#include <gtest/gtest.h>

#include "fibonacci.h"

/* Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */

uint32_t problem_2()
{
   uint32_t sum = 0;

   auto accumulator = [&sum](fibonacci::underlying_t fibo)
   {
      if(fibo % 2 == 0)
      {
         sum += fibo;
      }
   };

   fibonacci::fibo_traverse_functor(4E6, accumulator);

   return sum;
}

TEST(Problem2, CorrectAnswer)
{
   EXPECT_EQ(problem_2(), 4613732);
}

#endif //PROJECT_EULER_SOLUTIONS_PROBLEM_2_H
